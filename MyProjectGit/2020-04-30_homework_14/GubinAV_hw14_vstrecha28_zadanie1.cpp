// задание из файла "homework 14.pdf"

#include <iostream>
#include <clocale>

#define N "\n"

using namespace std;


//--------------------------------------------------------------------------------------

bool notPrimeNumber			// ФУНКЦИЯ проверки, что число не простое
(
	size_t number					// проверяемое число
)
{
	if (number == 0)				// если число равно 0
	{
		return true;					// - число не простое
	}
	else if (number == 1)			// если число равно 1
	{
		return false;					// - число простое
	}
	else 
	{
		for (size_t i = 2; i < number; i++)
		{
			if (!(number % i))		// если будет найден делитель
			{
				return true;		// - число не простое
			}			
		}
		
		return false;				// иначе - число простое
	}
}


//--------------------------------------------------------------------------------------


void printingAnArray					// ФУНКЦИЯ печати динамического массива
(
	size_t* dynamicArray,						// указатель на динамический массив

	size_t length								// длина динамического массива
)
{
	for (size_t i = 0; i < length; i++)
	{
		cout << " " << dynamicArray[i];
	}

	cout << N << endl;
}


//--------------------------------------------------------------------------------------


void removingPrimesFromAnArray		// ФУНКЦИЯ удаления простых чисел из динамического массива
(
	size_t*& dynamicArray,						// указатель на динамический массив (ссылка)

	size_t& length								// длина динамического массива (ссылка)
)
{
	size_t counter = 0;								// счетчик не простых чисел

	for (size_t i = 0; i < length; i++)				// подсчет количества не простых чисел
	{
		if (notPrimeNumber(dynamicArray[i]))		// если число не простое
		{
			counter++;								// - увеличить счетчик на 1
		}
	}

	size_t* newArray = new size_t[counter];			// создадим новый динамический массив

	for (size_t i = 0, j = 0; i < length; i++)		// перепишем из старого массива в новый
	{
		if (notPrimeNumber(dynamicArray[i]))		// значения не простых чисел
		{
			newArray[j++] = dynamicArray[i];		// с пропуском значений простых чисел
		}
	}

	delete[] dynamicArray;							// удалим старый массив

	dynamicArray = newArray;						// присвоим старому указателю адрес нового массива

	length = counter;								// присвоим переменной длины массива новое значение
}


//--------------------------------------------------------------------------------------


int main()
{
	setlocale(LC_ALL, "ru");

	//-----------------------------------------------

	//                         Домашнее задание №14

	// Тема: Указатели. Передача параметров.

	//                         Встреча №28. Задание 1

	//     Написать  функцию, которая  получает  указатель на динамический  массив
	// и его размер. Функция должна удалить из массива все простые числа и вернуть
	// указатель на новый динамический массив.

	// Примечание разработчика. Число 0 - не простое число. Число 1 - простое число.

	cout
		<< "                            Домашнее задание №14"

		N N" Тема: Указатели. Передача параметров."

		N N"                           Встреча №28. Задание 1"

		N N"     Написать  функцию, которая  получает  указатель на динамический  массив"

		N N" и его размер. Функция должна удалить из массива все простые числа и вернуть"

		N N" указатель на новый динамический массив."

		<< N << endl;

	size_t length = 20;									// длина динамического массива

	size_t* dynamicArray = new size_t[length];			// динамический массив

	for (size_t i = 0; i < length; i++)					// заполним массив значениями от 0 по 19
	{
		dynamicArray[i] = i;
	}

	// печать массива

	cout << " Создан динамический массив:" << N << endl;

	printingAnArray(dynamicArray, length);

	// удаление простых чисел из массива

	removingPrimesFromAnArray(dynamicArray, length);

	// печать массива

	cout << " Удалим из массива простые числа:" << N << endl;

	printingAnArray(dynamicArray, length);

	//-----------------------------------------------

	return 0;
}
