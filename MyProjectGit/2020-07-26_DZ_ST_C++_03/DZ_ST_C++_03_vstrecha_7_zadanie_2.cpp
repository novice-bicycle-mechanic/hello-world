// задание из файла DZ_ST_C++_03.pdf
// Встреча №7
// Тема: Перегрузка инкремента и декремента.
//       Перегрузка логических операторов.
//       Возврат по ссылке.
//       Перегрузка оператора присваивания
// Задание 2.
/*
Создать класс Flat (квартира).
Реализовать перегруженные операторы:
1. Проверка на равенство площадей квартир (операция ==).
2. Операцию присваивания одного объекта в другой (операция =).
3. Сравнение двух квартир по цене (операция >).
*/

#include <iostream>
#include <clocale>
using namespace std;


class Flat {
private:
	int area{ 0 };
	int price{ 0 };
public:
	Flat(){}
	Flat(int area, int price) : area(area), price(price) {}

	// Метод перегрузки оператора =
	Flat operator=(const Flat& flat) {
		this->area = flat.area;
		this->price = flat.price;
		return *this;
	}

	// прототип дружественной функции вывода на консоль оператором <<
	friend std::ostream& operator<<(std::ostream& out, const Flat& flat);

	// прототип дружественной функции перегрузки оператора ==
	friend bool operator==(const Flat& flat1, const Flat& flat2);

	// прототип дружественной функции перегрузки оператора >
	friend bool operator>(const Flat& flat1, const Flat& flat2);
};


// Дружественная ФУНКЦИЯ вывода объекта на консоль оператором <<
std::ostream& operator<<(std::ostream& out, const Flat& flat) {
	out << " Квартира площадью " << flat.area << " кв.м, ценой " << flat.price << " руб.";
	return out;
}
// КОНЕЦ дружественной ФУНКЦИИ оператора <<


// Дружественная ФУНКЦИЯ перегрузки оператора ==
bool operator==(const Flat& flat1, const Flat& flat2) {
	return flat1.area == flat2.area;
}
// КОНЕЦ дружественной ФУНКЦИИ оператора ==


// Дружественная ФУНКЦИЯ перегрузки оператора >
bool operator>(const Flat& flat1, const Flat& flat2) {
		return flat1.area > flat2.area;
}
// КОНЕЦ дружественной ФУНКЦИИ оператора >


int main() {
	setlocale(LC_ALL, "ru");

	Flat квартира1(100, 3000000);
	cout << " Создана" << квартира1 << endl;

	Flat квартира2(80, 2500000);
	cout << " Создана" << квартира2 << endl;

	Flat квартира3(60, 2000000);
	cout << " Создана" << квартира3 << endl;

	cout << " Присвоим объекту " << квартира3 << " значение объекта " << квартира1 << ": ";
	квартира3 = квартира1;
	cout << квартира3 << endl;

	cout
		<< квартира1
		<< (квартира1 == квартира2 ? "" : " не")
		<< " равна по площади "
		<< квартира2
		<< endl;

	cout
		<< квартира1
		<< (квартира1 == квартира3 ? "" : " не")
		<< " равна по площади "
		<< квартира3
		<< endl;


	cout
		<< квартира1
		<< (квартира1 > квартира2 ? "" : " не")
		<< " дороже "
		<< квартира2
		<< endl;

	cout
		<< квартира1
		<< (квартира1 > квартира3 ? "" : " не")
		<< " дороже "
		<< квартира3
		<< endl;

	return 0;
}

