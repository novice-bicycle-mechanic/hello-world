Задание 2 из файла problemy_1592453914.txt

На занятии было сгенерировано два проекта класса "точка".
Они выложены в дискорде.
Вы должны взять один из них и подготовить текстовое описание:
1) ищете функцию main и описываете, что делает каждая её строчка. Письменно.
2) открываете класс Dot и описываете каждое поле и каждый метод. Письменно.
Охватить нужно всю программу. Кратко.

// символ "точка с запятой" (';') - есть знак окончания команды языка C++

1. Файл Class_Dot.cpp

#include <iostream>             // подключение к файлу "Class_Dot.cpp" заголовочного файла "iostream"
                                // "#include" - команда препроцессора на подключение файла
                                // символы '<' и '>' - границы имени подключаемого файла,
                                // применение угловых скобок в команде - искать указанный файл
                                //   по системным путям
                                // "iostream" - класс С++ для ввода-вывода данных

#include <fstream>              // аналогично "#include <iostream>"
                                // - подключение к файлу "Class_Dot.cpp" заголовочного файла "fstream"
                                // "fstream" - класс С++ для ввода-вывода данных в файлы
                                // (дочерний класс iostream)

#include "Dot_1.h"              // подключение к файлу "Class_Dot.cpp" заголовочного файла "Dot_1.h",
                                // то, что имя подключаемого файла указано в кавычках ("Dot_1.h") означает,
                                // что искать его необходимо в той же директории, в которой расположен
                                // файл "Class_Dot.cpp"

using namespace std;            // объявление ("using") пространства имен ("namespace") "std" по умолчанию,
                                // т.е. без дополнительного указания перед требуемым идентификатором
                                // с помощью оператора видимости "::" (std::...)

int main()                       // объявление и, ниже, определение функции "main"
                                 // int - тип возвращаемого функцией значения,
                                 // main - наименование функции,
                                 // символы '(' и ')' - область указания аргументов функции

{                                // знак начала определения (тела) функции "main"

  setlocale(LC_ALL, "Russian");  // функция setlocale указывает регионально-языковую
                                 // локализацию (специализацию) настоящей программы
                                 // LC_ALL - константа равная 0, указывает что локализации
                                 //       подвергаются все темы (шрифт, формат чисел,
                                 //       дат, денег и т.п.)
                                 // "Russian" - наименование страны, для которой производится
                                 //          локализация программы (русский язык по умолчанию)

  Dot x;                         // создание переменной - экземпляра (объекта) класса:
                                 // Dot - идентификатор типа переменной - наименование класса
                                 // x - идентификатор (имя) переменной (экземпляра, объекта класса)

  x.Input();                     // вызов свойства объекта x - метода (функции) Input класса Dot -
                                 // с помощью оператора "точка" ('.'). Скобки '(' и ')' - есть
                                 // начало и окончание области перечисления аргументов функции Input

  x.cout_coord();                // аналогично предыдущей команде "x.Input();"
                                 // - вызов метода "cout_coord" объекта "x" класса "Dot"

  Dot y;                         // аналогично "Dot x;"
                                 // - создание переменной/объекта "y" класса "Dot"

  y.Input();                     // аналогично "x.Input();"
                                 // - вызов метода "Input" объекта "y" класса "Dot"

  y.cout_coord();                // аналогично "x.cout_coord();"
                                 // - вызов метода "cout_coord" объекта "y" класса "Dot"

  y.fout_in_file();              // вызов метода "fout_in_file" объекта "y" класса "Dot"

  x.fout_in_file();              // вызов метода "fout_in_file" объекта "x" класса "Dot"

}                                // знак конца определения (тела) функции main


2. Файл Dot_1.h

#pragma once                     // директива препроцессора - подключить файл "Dot_1.h" только один раз

#include <fstream>               // директива препроцессора - подключить заголовочный файл "fstream"
                                 // "fstream" - класс ввода-вывода в файлы

using namespace std;             // объявить пространство имен "std" применяемым по умолчанию

class Dot {                      // начало объявления класса "Dot"

private:                         // "private" - квалификатор доступности - "не доступно"
                                 // все что указано далее и ниже - есть скрытые данные/функции,
                                 // недоступные для команд/функций объектов других классов
                                 // и безклассовых команд/функций

  int x;                         // объявление без инициализации переменной "x" типа "int" как члена класса
  int y;                         // объявление без инициализации переменной "y" типа "int" как члена класса
  int z;                         // объявление без инициализации переменной "z" типа "int" как члена класса

public:                          // "public" - квалификатор доступности - "доступно"
                                 // все что указано далее и ниже - есть открытые данные/функции,
                                 // доступные для команд/функций объектов других классов
                                 // и безклассовых команд/функций

  void Input();                  // объявлена функция/метод класса "Input". Аргументы не имеет

  void cout_coord();             // объявлена функция/метод класса "cout_coord". Аргументы не имеет

  int getX() {                   // объявлена и определена функция/метод класса "getX". Аргументы не имеет
    return x;                    // единственная команда функции getX - возврат значения переменной-члена x
  }

  int getY() {                   // объявлена и определена функция/метод класса "getY". Аргументы не имеет
    return y;                    // единственная команда функции getY - возврат значения переменной-члена y
  }

  int getZ() {                   // объявлена и определена функция/метод класса "getZ". Аргументы не имеет
    return z;                    // единственная команда функции getZ - возврат значения переменной-члена z
  }

  Dot() {                        // объявлен и определен "Конструктор по умолчанию" класса Dot
    x = 0;                       // инициализация переменной-члена класса x значением 0
    y = 0;                       // инициализация переменной-члена класса y значением 0
    z = 0;                       // инициализация переменной-члена класса z значением 0
  }
  
  Dot(int a, int b, int c) {     // объявлен и определен "Конструктор с параметрами" класса Dot
                                 // аргументы-параметры: переменная a типа int,
                                                         переменная b типа int,
                                                         переменная c типа int

    x = a;                       // инициализация переменной-члена класса x значением переменной a
    y = b;                       // инициализация переменной-члена класса y значением переменной b
    z = c;                       // инициализация переменной-члена класса z значением переменной c
  }

  ~Dot() {                       // объявлен и определен "Деструктор" класса Dot
                                 // Выполняемые команды в Деструкторе не указаны
  }

  void fout_in_file() {          // объявлена и определена функция "fout_in_file", как метод класса Dot

    ofstream fout;               // создан объект "fout" класса "ofstream", который будет ассоциироваться 
                                 // с файлом, в который будут записываться данные

    fout.open("Dot_Coords.txt"); // вызвать метод "open" с аргументом "Dot_Coords.txt" (имя файла)
                                 // объекта "fout" класса "ofstream"
                                 // - открыть для записи / ассоциировать с объектом "fout"
                                 // файл Dot_Coords.txt

    fout << "(" << x << "," << y << "," << z << ")" << endl;
                                 // записать в файл строку значений из переменных x y z
                                 // разделенных символами "запятая" (',')
                                 // строка начинается символом "скобка открывается" ('(')
                                 // и заканчивается символом "скобка закрывается" (')')
                                 // !!! ВАЖНО !!! - переменные x, y, z содержат односимвольное число - цифру

    fout.close();                // прекратить ассоциацию (файла) с объектом "fout"
                                 // - закрыть файл ("Dot_Coords.txt")
  }

  void cout_full() {             // объявлена и определена функция "cout_full", как метод класса Dot

    ifstream fcout;              // создан объект "fcout" класса "ifstream", который будет ассоциироваться 
                                 // с файлом, из которого будут загружаться данные

    fcout.open("Dot_Coords.txt");
                                 // вызвать метод "open" с аргументом "Dot_Coords.txt" (имя файла)
                                 // класса "ifstream"
                                 // открыть для чтения / ассоциировать с объектом "fcout" файл "Dot_Coords.txt"

    char r;                      // объявлена переменная "r" типа char

    fcout >> r >> x >> r >> y >> r >> z >> r;
                                 // записать в переменные x y z значения цифр (односимвольных чисел),
                                 // а символы-разделители "запятая" (',') и скобки ('(',')')
                                 // будут записаны последовательно в переменную "r", затирая друг друга

    fcout.close();               // прекратить ассоциацию (файла) с объектом "fcout"
                                 // - закрыть файл ("Dot_Coords.txt")
  }

};                               // конец объявления класса Dot


3. Файл Dot_1.cpp

#include <iostream>              // подключение к файлу "Dot_1.cpp" заголовочного файла "iostream"

#include "Dot_1.h"               // подключение к файлу "Dot_1.cpp" заголовочного файла "Dot_1.h"

using namespace std;             // объявление ("using") пространства имен ("namespace") "std" по умолчанию

void Dot::Input() {              // объявление и определение внешнего метода "Input" класса "Dot"
                                 // метод не возвращает значение

  cout << "Введите x";           // вывод на консоль строки "Введите x"

  cin >> x;                      // запись введенного в консоли (на клавиатуре) значения
                                 // в переменную-член "x"

  cout << "Введите y";           // вывод на консоль строки "Введите y"

  cin >> y;                      // запись введенного в консоли (на клавиатуре) значения
                                 // в переменную-член "y"

  cout << "Введите z";           // вывод на консоль строки "Введите z"

  cin >> z;                      // запись введенного в консоли (на клавиатуре) значения
                                 // в переменную-член "z"
}

void Dot::cout_coord() {         // объявление и определение внешнего метода "cout_coord" класса "Dot"
                                 // метод не возвращает значение

  cout << "(" << x << "," << y << "," << z << ")";
                                 // вывести в консоль (на экран) строку значений из переменных x y z
                                 // разделенных символами "запятая" (',')
                                 // строка начинается символом "скобка открывается" ('(')
                                 // и заканчивается символом "скобка закрывается" (')')

}











